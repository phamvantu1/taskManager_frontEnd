import React, { useState } from 'react';
import '../style/report.css';
import Header from '../components/Header';
import Sidebar from '../components/Sidebar';
import { useNavigate } from 'react-router-dom';

const reportData = [
  {
    name: 'V≈© ƒë·ª©c vi·ªát',
    department: 'Ph√≤ng Ph√°t tri·ªÉn ph·∫ßn m·ªÅm 2',
    doing: 0,
    overdue: 0,
    pending: 0,
    doneOnTime: 0,
    doneLate: 0,
    total: 0,
    avgScore: 0,
    evalPoint: 0,
    minusPoint: 0
  },
  {
    name: 'Nguy·ªÖn H·ªìng Nhung',
    department: 'Ph√≤ng Ph√°t tri·ªÉn ph·∫ßn m·ªÅm 2',
    doing: 0,
    overdue: 0,
    pending: 0,
    doneOnTime: 0,
    doneLate: 0,
    total: 0,
    avgScore: 0,
    evalPoint: 0,
    minusPoint: 0
  },
  // Th√™m c√°c d√≤ng d·ªØ li·ªáu kh√°c ·ªü ƒë√¢y...
];

const ReportPage = () => {
  const [search, setSearch] = useState('');
  const [department, setDepartment] = useState('');
  const [fromDate, setFromDate] = useState('2025-07-01');
  const [toDate, setToDate] = useState('2025-07-31');

  const navigate = useNavigate();
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);
  const [showProfile, setShowProfile] = useState(false);
  const [showAddPopup, setShowAddPopup] = useState(false);


  const toggleDropdown = () => {
    setIsDropdownOpen(!isDropdownOpen);
  };

  const handleChangePassword = () => {
    console.log('Change password clicked');
    setIsDropdownOpen(false);
  };

  const handleProfile = () => {
    setShowProfile(true);
    setIsDropdownOpen(false);
  };

  const handleBackToDashboard = () => {
    setShowProfile(false);
  };

  const handleLogout = () => {
    localStorage.removeItem('access_token');
    navigate('/login');
  };

  return (
    <div className="report-container">
      <Sidebar />
      <div className="main-content" >

        <h2 className="report-title">üìä B√°o c√°o</h2>

        <div className="report-filters">
          <select className="filter-select">
            <option>B√°o c√°o theo th√†nh vi√™n</option>
          </select>

          <input
            type="text"
            className="filter-input"
            placeholder="T√¨m ki·∫øm"
            value={search}
            onChange={(e) => setSearch(e.target.value)}
          />

          <select
            className="filter-select"
            value={department}
            onChange={(e) => setDepartment(e.target.value)}
          >
            <option value="">Ph√≤ng ban</option>
            <option value="Ph√≤ng Ph√°t tri·ªÉn ph·∫ßn m·ªÅm 2">Ph√≤ng Ph√°t tri·ªÉn ph·∫ßn m·ªÅm 2</option>
            <option value="T·ªï QC">T·ªï QC</option>
          </select>

          <div className="date-range">
            <input
              type="date"
              value={fromDate}
              onChange={(e) => setFromDate(e.target.value)}
            />
            <span>‚Üí</span>
            <input
              type="date"
              value={toDate}
              onChange={(e) => setToDate(e.target.value)}
            />
          </div>

          <button className="export-button">Xu·∫•t Excel</button>
        </div>

        <table className="report-table">
          <thead>
            <tr>
              <th>Nh√¢n s·ª±</th>
              <th>Ph√≤ng ban</th>
              <th>ƒêang th·ª±c hi·ªán</th>
              <th>Qu√° h·∫°n</th>
              <th>Ch·ªù duy·ªát ho√†n th√†nh</th>
              <th>Ho√†n th√†nh ƒë√∫ng h·∫°n</th>
              <th>Ho√†n th√†nh kh√¥ng ƒë√∫ng h·∫°n</th>
              <th>T·ªïng s·ªë c√¥ng vi·ªác</th>
              <th>ƒêi·ªÉm c√¥ng vi·ªác trung b√¨nh</th>
              <th>ƒêi·ªÉm c·ªông ƒë√°nh gi√°</th>
              <th>ƒêi·ªÉm tr·ª´ ƒë√°nh gi√°</th>
            </tr>
          </thead>
          <tbody>
            {reportData.map((user, index) => (
              <tr key={index}>
                <td>{user.name}</td>
                <td>{user.department}</td>
                <td>{user.doing}</td>
                <td>{user.overdue}</td>
                <td>{user.pending}</td>
                <td>{user.doneOnTime}</td>
                <td>{user.doneLate}</td>
                <td>{user.total}</td>
                <td>{user.avgScore}</td>
                <td>{user.evalPoint}</td>
                <td>{user.minusPoint}</td>
              </tr>
            ))}
          </tbody>
        </table>

        <div className="pagination">
          <button>{'<<'}</button>
          {[1, 2, 3, 4, 5].map(n => <button key={n}>{n}</button>)}
          <span>...</span>
          <button>15</button>
          <button>{'>>'}</button>
        </div>
      </div>

    </div>
  );
};

export default ReportPage;
